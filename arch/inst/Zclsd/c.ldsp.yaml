# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: c.ldsp
long_name: Stack-pointer based load doubleword to even/odd register pair
description: |
  Loads stack-pointer relative 64-bit value into registers rd and rd+1. It computes its effective
  address by adding the zero-extended offset, scaled by 8, to the stack pointer, sp. It expands to ld
  rd, offset(sp). C.LDSP is only valid when rdâ‰ x0; the code points with rd=x0 are reserved.
definedBy: Zclsd
assembly: rd, offset(sp)
encoding:
  match: 011-----------01
  variables:
    - name: rd
      location: 11-7
      not: [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31]
    - name: imm
      location: 4-2|12|6-5
      left_shift: 3
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |

  Bits<XLEN> base = X[2];
  Bits<XLEN> offset = imm;
  Bits<XLEN> eff_addr = base + offset;

  Bits<64> data = read_memory<64>(eff_addr, $encoding);

    X[rd]   = data[31:0];
    X[rd+1] = data[63:32];
sail(): "" #not implemented in the sail model yet
